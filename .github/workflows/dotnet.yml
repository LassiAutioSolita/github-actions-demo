name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run unit tests
      run: dotnet test tests/AzDevOpsDemoWebApplicationUnitTests/AzDevOpsDemoWebApplicationUnitTests.csproj
    - name: Publish Unit Test Results
      uses: dorny/test-reporter@v1.2.0
      if: always()
      with:
        name: TRX format test report
        path: '*.xml'
        reporter: dotnet-trx
        fail-on-error: 'true'
    - name: Publish the app
      run: dotnet publish -c Release -o app AzDevOpsDemoWebApplication/AzDevOpsDemoWebApplication.csproj
    - name: Upload my-app artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: app
        path: app
    - name: Publish integration tests
      run: dotnet publish -c Release -o IntegrationTests tests/IntegrationTests/IntegrationTests.csproj
    - name: Upload IntegrationTests artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: IntegrationTests
        path: IntegrationTests
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: dev
    steps:
    - name: deploy
      run: echo Faking that app is deployed to dev env...
      
  integration_tests:
    runs-on: windows-latest
    needs: deploy
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: IntegrationTests
        path: IntegrationTests
    - name: Setup VSTest.console.exe
      uses: darenm/Setup-VSTest@v1.1.1
    - name: VSTest
      run: vstest.console.exe IntegrationTests\IntegrationTests.dll
